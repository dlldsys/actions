name: VLESS Server Workflow

on:
  workflow_dispatch:
    inputs:
      port:
        description: 'VLESS 服务端监听端口'
        required: true
        default: '8080'
      uuid:
        description: 'VLESS UUID'
        required: true
        default: '2178250e-7cd3-404c-bcf4-02fe5f25d171'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up VLESS Server
        env:
          PORT: ${{ github.event.inputs.port }}
          UUID: ${{ github.event.inputs.uuid }}
        run: |
          # 安装必要的软件
          sudo apt-get update
          sudo apt-get install -y wget unzip jq

          # 下载并安装 Xray
          wget https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip
          unzip Xray-linux-64.zip -d xray
          sudo mv xray/xray /usr/local/bin/
          sudo chmod +x /usr/local/bin/xray

          # 创建 VLESS 服务端配置文件
          cat > config.json << EOF
          {
            "log": {
              "loglevel": "warning"
            },
            "inbounds": [
              {
                "port": $PORT,
                "protocol": "vless",
                "settings": {
                  "clients": [
                    {
                      "id": "$UUID",
                      "level": 0
                    }
                  ],
                  "decryption": "none"
                },
                "streamSettings": {
                  "network": "tcp",
                  "security": "none"
                }
              }
            ],
            "outbounds": [
              {
                "protocol": "freedom",
                "settings": {}
              }
            ]
          }
          EOF
          
          # 调试：显示配置文件内容和大小
          echo "配置文件内容:"
          cat config.json
          echo "配置文件大小:"
          du -h config.json
          
          # 验证配置文件格式
          if ! jq . config.json >/dev/null 2>&1; then
            echo "配置文件格式错误!"
            exit 1
          fi

          # 开放端口
          sudo ufw allow $PORT/tcp

          # 启动 Xray
          sudo xray run -c config.json &
          sleep 5  # 等待 Xray 启动
    
          # 安装 ngrok
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          tar -xzf ngrok-v3-stable-linux-amd64.tgz
          chmod +x ngrok
    
          # 使用 ngrok 暴露服务（需要先注册并获取 authtoken）
          ./ngrok config add-authtoken <YOUR_NGROK_AUTH_TOKEN>
          ./ngrok tcp $PORT &
          sleep 10  # 等待 ngrok 启动
    
          # 获取 ngrok 分配的公网地址和端口
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          NGROK_HOST=$(echo $NGROK_URL | cut -d':' -f2 | sed 's//''/')
          NGROK_PORT=$(echo $NGROK_URL | cut -d':' -f3)
    
          # 输出服务信息（使用 ngrok 地址）
          echo "VLESS 服务端已通过 ngrok 暴露"
          echo "公网地址: $NGROK_HOST"
          echo "公网端口: $NGROK_PORT"
          echo "UUID: $UUID"
    
          # 生成新的 VLESS URL（使用 ngrok 地址）
          VLESS_URL="vless://$UUID@$NGROK_HOST:$NGROK_PORT?encryption=none&security=none&type=tcp#GitHub_Actions_VLESS"
          echo "VLESS URL: $VLESS_URL"
          # 将访问信息保存到文件
          cat > vless_config_info.txt << EOF
          VLESS 服务端配置信息:
          地址: $PUBLIC_IP
          端口: $PORT
          用户ID: $UUID
          加密: none
          传输协议: tcp
          EOF

          # 保持服务运行
          while true; do sleep 3600; done
          
      - name: Upload server information
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vless-server-info
          path: vless_config_info.txt

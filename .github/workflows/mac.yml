name: Fixed macOS Remote Desktop v4

on:
  workflow_dispatch:

jobs:
  configure-remote:
    runs-on: macos-latest
    env:
      RUNNER_ARCH: arm64
      USERNAME: remotedesktop
      PASSWORD: YourStrongPassword123!

    steps:
      - name: Enable Remote Management with full permissions
        run: |
          # 完全重置并重新配置远程管理
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -configure -access -off
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -allowAccessFor -allUsers \
            -privs -all -clientopts -setvnclegacy -vnclegacy yes \
            -clientopts -setvncpw -vncpw $PASSWORD \
            -restart -agent -menu

      - name: Enable Screen Sharing
        run: |
          sudo defaults write /var/db/launchd.db/com.apple.launchd/overrides.plist com.apple.screensharing -dict Disabled -bool false
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
          # 确保屏幕共享服务正在运行
          sudo launchctl start com.apple.screensharing

      - name: Configure security permissions (adaptive TCC fix)
        run: |
          # 获取 macOS 版本
          OS_VERSION=$(sw_vers -productVersion | cut -d '.' -f 1)
          echo "Detected macOS version: $OS_VERSION"

          # 根据 macOS 版本使用不同的 TCC 配置
          if [ "$OS_VERSION" -ge 14 ]; then
            # macOS 14+ (Sonoma及以上) 的 TCC 结构
            SCREEN_CAPTURE_SQL="INSERT OR REPLACE INTO access VALUES('kTCCServiceScreenCapture', 'com.apple.screensharing', 0, 1, 1, NULL, NULL, NULL, 'UNUSED', NULL, 0, NULL, NULL, NULL, NULL, 1, 2);"
            ACCESSIBILITY_SQL="INSERT OR REPLACE INTO access VALUES('kTCCServiceAccessibility', 'com.apple.screensharing', 0, 1, 1, NULL, NULL, NULL, 'UNUSED', NULL, 0, NULL, NULL, NULL, NULL, 1, 2);"
          elif [ "$OS_VERSION" -ge 13 ]; then
            # macOS 13 (Ventura) 的 TCC 结构
            SCREEN_CAPTURE_SQL="INSERT OR REPLACE INTO access VALUES('kTCCServiceScreenCapture', 'com.apple.screensharing', 0, 1, 1, NULL, NULL, NULL, 'UNUSED', NULL, 0, NULL, NULL, NULL, NULL, 1, NULL);"
            ACCESSIBILITY_SQL="INSERT OR REPLACE INTO access VALUES('kTCCServiceAccessibility', 'com.apple.screensharing', 0, 1, 1, NULL, NULL, NULL, 'UNUSED', NULL, 0, NULL, NULL, NULL, NULL, 1, NULL);"
          else
            # 旧版本 macOS 的 TCC 结构
            SCREEN_CAPTURE_SQL="INSERT OR REPLACE INTO access VALUES('kTCCServiceScreenCapture', 'com.apple.screensharing', 0, 1, 1, NULL, NULL, NULL, 'UNUSED', NULL, 0);"
            ACCESSIBILITY_SQL="INSERT OR REPLACE INTO access VALUES('kTCCServiceAccessibility', 'com.apple.screensharing', 0, 1, 1, NULL, NULL, NULL, 'UNUSED', NULL, 0);"
          fi

          # 应用屏幕录制权限配置
          tccutil reset ScreenCapture com.apple.screensharing
          sudo sqlite3 /Library/Application\ Support/com.apple.TCC/TCC.db "$SCREEN_CAPTURE_SQL"
          
          # 应用辅助功能权限配置
          tccutil reset Accessibility com.apple.screensharing
          sudo sqlite3 /Library/Application\ Support/com.apple.TCC/TCC.db "$ACCESSIBILITY_SQL"

          # 为远程桌面应用配置权限
          tccutil reset ScreenCapture com.apple.remotedesktop
          sudo sqlite3 /Library/Application\ Support/com.apple.TCC/TCC.db "$SCREEN_CAPTURE_SQL"

          # 重启 TCC 服务
          sudo pkill -HUP tccd

      - name: Create and configure user
        run: |
          # 删除现有用户（如果存在）
          sudo dscl . -delete /Users/$USERNAME 2>/dev/null || true
          
          # 创建新用户
          sudo dscl . -create /Users/$USERNAME
          sudo dscl . -create /Users/$USERNAME UserShell /bin/bash
          sudo dscl . -create /Users/$USERNAME RealName "Remote User"
          sudo dscl . -create /Users/$USERNAME UniqueID 501
          sudo dscl . -create /Users/$USERNAME PrimaryGroupID 20
          sudo dscl . -create /Users/$USERNAME NFSHomeDirectory /Users/$USERNAME
          echo "$PASSWORD" | sudo dscl . -passwd /Users/$USERNAME
          sudo createhomedir -c -u $USERNAME > /dev/null
          sudo dscl . -append /Groups/admin GroupMembership $USERNAME

      - name: Verify remote access configuration
        run: |
          echo "Checking Remote Desktop status:"
          sudo systemsetup -getremotedesktop
          
          echo "Checking Screen Sharing status:"
          sudo launchctl list | grep screensharing
          
          echo "TCC Database entries for screen capture:"
          sudo sqlite3 /Library/Application\ Support/com.apple.TCC/TCC.db "SELECT * FROM access WHERE service = 'kTCCServiceScreenCapture';"

      - name: Display connection info
        run: |
          echo "IP Address: $(ipconfig getifaddr en0 || ipconfig getifaddr en1)"
          echo "Username: $USERNAME"
          echo "Password: $PASSWORD"
          echo "VNC Password: $PASSWORD"

      - name: Keep runner alive
        run: |
          echo "Runner will stay alive for 30 minutes"
          sleep 1800


          
      # - name: sakura frp
      #   run: |
      #     mkdir -p -m 755 /usr/local/bin && cd /usr/local/bin
      #     curl -Lo frpc https://nya.globalslb.net/natfrp/client/frpc/0.51.0-sakura-12.3/frpc_darwin_arm64
      #     chmod 755 frpc
      #     ls -ls frpc
      #     frpc -v
      #     frpc -f wadr25y8xv6h4ek361eoitlfsn7ow2nn:17573313 &
